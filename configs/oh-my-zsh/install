# External plugin sources
custom_plugins=(
  "https://github.com/Aloxaf/fzf-tab"
  "https://github.com/zsh-users/zsh-syntax-highlighting"
)
# Native plugins to load
plugins=(
  "asdf"
  "fzf"
  "git"
  "httpie"
  "safe-paste"
  "vscode"
)
# Theme of choice
theme=robbyrussell

install_omz() {
  if [ -d "${HOME}/.oh-my-zsh" ]; then
    warn "oh-my-zsh directory already exists ➡ skipping install"
  else
    substep "Installing oh-my-zsh"
    RUNZSH=no KEEP_ZSHRC=yes sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    zsh_config="# oh-my-zsh
    export ZSH=\${HOME}/.oh-my-zsh
    ZSH_THEME=${theme}
    plugins=(${plugins[*]})
    source \${ZSH}/oh-my-zsh.sh"
    append_to_file "${HOME}/.fettle-it/customisations/zsh/custom" "${zsh_config}"
    substep_done "Installing oh-my-zsh ➡ complete"
  fi
}

install_plugins() {
  for custom_plugin in "${custom_plugins[@]}"; do
    plugin="${custom_plugin##*/}"
    plugin_dir="${ZSH_CUSTOM:-${HOME}/.oh-my-zsh/custom}/plugins/${plugin}"
    plugins+=("${plugin}")

    if [ -d "${plugin_dir}" ]; then
      warn "oh-my-zsh plugin ${plugin} already exists ➡ skipping install"
    else
      substep "Installing oh-my-zsh plugin ${plugin}"
      git clone "${custom_plugin}" "${plugin_dir}"
      substep_done "Installing oh-my-zsh plugin ${plugin} ➡ complete"
    fi
  done
}

set_config() {
  substep "Loading plugins: ${plugins[*]}"
  replace_in_file "${HOME}/.fettle-it/customisations/zsh/custom" "^plugins=(.*)$" "plugins=(${plugins[*]})"
  substep_done "Loading plugins: ➡ complete"

  substep "Loading theme: ${theme}"
  replace_in_file "${HOME}/.fettle-it/customisations/zsh/custom" "^ZSH_THEME=.*$" "ZSH_THEME=${theme}"
  substep_done "Loading theme: ➡ complete"

  substep "Loading custom aliases"
  if [ -f "${HOME}/.fettle-it/customisations/aliases" ]; then
    ln -sf "${HOME}/.fettle-it/customisations/aliases" "${HOME}/.oh-my-zsh/custom/aliases.zsh"
  fi
  substep_done "Loading custom aliases ➡ complete"
}

install_omz
install_plugins
set_config

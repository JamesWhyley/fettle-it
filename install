#!/bin/sh

# Fail fast
set -o errexit

source ./fettlers

configure_git() {
  step "Configuring Git"
  substep "Add gitconfig"
  git_config="[include]
  path = ~/.fettle-it/gitconfig"
  append_to_file "$git_config" "${HOME}"/.gitconfig
  substep_done "Add gitconfig ➡ complete"

  substep "Configure Github user"
  git_user_email=$(git config user.email 2>&1)
  git_user_name=$(git config user.name 2>&1)
  git_sign_key=$(git config user.signingkey 2>&1)

  if [[ -z $git_user_name ]]; then
    git config --global user.name "$(gum input --placeholder "Github name")"
  fi
  substep_done "User name set"

  if [[ -z $git_user_email ]]; then
    git config --global user.email "$(gum input --placeholder "Github email")"
  fi
  substep_done "User email set"

  if [[ -z $git_sign_key ]]; then
    git config --global user.signingkey "$(gum input --placeholder "Github signing key")"
  fi
  substep_done "Signing key set"
  substep_done "Configure Github user ➡ complete"
  step_done "Done"
}

install_dependencies() {
  step "Installing dependencies"
  if ! which brew >/dev/null; then
    warn "Homebrew is not installed"
    substep "Do you want to install Homebrew?"
    substep "Selecting yes will execute the following command"
    echo ""
    warn '/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"'
    echo ""
    substep "Are you happy to continue?"
    choose_wisely
    echo ""

    # Install Hombrew and prep for first run
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    eval "$(/opt/homebrew/bin/brew shellenv)"
  fi

  if which brew >/dev/null; then
    substep_done "Homebrew is configured"
  fi

  if ! which gum >/dev/null; then
    warn "Gum is not installed"
    substep "Installing gum"
    brew install gum > /dev/null 2>&1
    substep_done "Gum installed"
  fi

  substep "Processing common brewfile"
  gum spin --spinner points --title "Grab a cuppa" -- brew bundle
  substep_done "Processing common brewfile ➡ complete"

  shopt -s nullglob
  BREWFILES=(Brewfile.*)

  for f in "${BREWFILES[@]}"; do
   GETTYPES+=("$(echo "$f" | cut -d'.' -f2)")
  done

  TYPES=$(gum choose --header "What's the nature of the beast?" --no-limit "${GETTYPES[@]}")
  for type in $TYPES; do
    substep "Processing $type brewfile"
    gum spin --spinner points --title "Installing $type apps" -- brew bundle --file=Brewfile."${type}"
    substep_done "Processing $type brewfile ➡ complete"
  done
  step_done "Done"
}

setup_work_dir() {
  step "Checking for working directory"

  if [ ! -d "${HOME}/code" ]; then
    warn "Working directory not found"
    substep "Creating working directory"
    mkdir "${HOME}/code"
  fi

  if [ -d "${HOME}/code" ]; then
    substep_done "Working directory set to \"${HOME}/code\""
  fi

  step_done "Done"
}

main() {
  banner
  setup_work_dir
  install_dependencies
  configure_git
}

main
